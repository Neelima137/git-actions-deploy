name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  compile:
    runs-on: runner-private #private runner
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Maven install
      run: sudo apt install maven -y
    - name: Build with Maven
      run: mvn compile
  
  security-check:
    runs-on: runner-private #private runner
    needs:  compile
    steps:
    - uses: actions/checkout@v4
    - name: Trivy installation
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install -y trivy 
    - name: Trivy fs scan 
      run: trivy fs . --format table -o fs-report.json

    - name: Gitleaks installation
      run: sudo apt install gitleaks -y
    - name: Git leaks code scan 
      run: gitleaks detect source . -r gitleaks-reports.json -f json

  test:
    runs-on: runner-private #private runner
    needs: security-check
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit test cases 
      run: mvn test
      
  sonarqube-scan:
    runs-on: runner-private #private runner
    needs: test
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Disabling shallow clones is recommended for improving the relevancy of reporting
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.2.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} #OPTIONAL
    
  build-project:
     runs-on: runner-private #private runner
     needs: sonarqube-scan
     steps:
     - uses: actions/checkout@v4
     - name: Set up JDK 17
       uses: actions/setup-java@v4
       with:
         java-version: '17'
         distribution: 'temurin'
         cache: maven
     - name: Build the project
       run: mvn package

     # Upload artifact
     - name: Upload JAR Artifact
       uses: actions/upload-artifact@v4
       with:
         name: app-jar
         path: target/*.jar # or path/to/artifact
     
  build-docker-image-push:
     runs-on: runner-private #private runner
     needs: build-project
     steps:
     - uses: actions/checkout@v4
       with:
         submodules: recursive
         fetch-depth: 0
     
     # Download artifact
     - name: Download JAR Artifact  
       uses: actions/download-artifact@v4
       with:
         name: app-jar
         path: app  # Downloads the JAR to the ./app folder
        
     # Login to Docker Hub
     - name: Login to Docker Hub
       uses: docker/login-action@v3
       with:
         username: ${{ vars.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
         
     # Set up QEMU
     - name: Set up QEMU
       uses: docker/setup-qemu-action@v3
       
     # Set up Docker Buildx
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3

     # Build and push Docker image
     - name: Build and push Docker image
       uses: docker/build-push-action@v6
       with:
         push: true
         tags: neelima1234/bankappactions:latest
